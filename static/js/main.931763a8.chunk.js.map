{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/Loader/Loader.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","Loader","FindMovie","setMovies","useState","setMovie","setQuery","error","setError","isLoading","setIsLoading","handleFindMovie","event","a","preventDefault","trim","movieFromServer","Title","Plot","Poster","imdbID","onSubmit","htmlFor","value","type","id","placeholder","onChange","eventChange","target","disabled","onClick","find","m","undefined","alert","handleAddMovie","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.931763a8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[],\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","const API_URL = 'https://www.omdbapi.com/?apikey=1734dfe';\n\nexport function getMovie(query: string) {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  setMovies: (movies: Movie[]) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [movie, setMovie] = useState<Movie | undefined>();\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFindMovie = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    const movieFromServer = await getMovie(query.trim());\n\n    if (movieFromServer.Response === 'False') {\n      setError(true);\n    } else {\n      setError(false);\n      setMovie({\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : movieFromServer.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n        imdbId: movieFromServer.imdbID,\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      if (movies.find(m => m.imdbId === movie.imdbId)) {\n        setQuery('');\n        setMovie(undefined);\n        // eslint-disable-next-line no-alert\n        alert('This movie is already in the list');\n\n        return;\n      }\n\n      setMovies([\n        ...movies,\n        movie,\n      ]);\n\n      setQuery('');\n      setMovie(undefined);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => handleFindMovie(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              onChange={(eventChange) => {\n                setQuery(eventChange.target.value);\n              }}\n              className=\"input is-dander\"\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            {!isLoading ? (\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className=\"button is-light\"\n                disabled={!query.trim()}\n              >\n                {movie ? 'Search again' : 'Find a movie'}\n              </button>\n            ) : (\n              <Loader />\n            )}\n\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  handleAddMovie();\n                }}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}